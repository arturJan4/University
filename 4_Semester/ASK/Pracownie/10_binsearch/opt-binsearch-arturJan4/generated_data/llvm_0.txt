Iterations:        10000
Instructions:      170000
Total Cycles:      93730
Total uOps:        210000

Dispatch Width:    6
uOps Per Cycle:    2.24
IPC:               1.81
Block RThroughput: 3.5


Cycles with backend pressure increase [ 18.43% ]
Throughput Bottlenecks: 
  Resource Pressure       [ 11.65% ]
  - SKLPort0  [ 9.72% ]
  - SKLPort1  [ 4.86% ]
  - SKLPort5  [ 4.86% ]
  - SKLPort6  [ 11.65% ]
  Data Dependencies:      [ 16.49% ]
  - Register Dependencies [ 16.49% ]
  - Memory Dependencies   [ 0.00% ]

Critical sequence based on the simulation:

              Instruction                                 Dependency Information
 +----< 16.   retq
 |
 |    < loop carried > 
 |
 |      0.    endbr64
 +----> 1.    testq	%rsi, %rsi                        ## RESOURCE interference:  SKLPort6 [ probability: 63% ]
 +----> 2.    jle	.L5                               ## REGISTER dependency:  %flags
 |      3.    xorl	%eax, %eax
 |      4.    jmp	.L4
 +----> 5.    setl	%cl                               ## RESOURCE interference:  SKLPort0 [ probability: 18% ]
 +----> 6.    movzbl	%cl, %ecx                         ## REGISTER dependency:  %cl
 +----> 7.    leaq	1(%rcx,%rax,2), %rax              ## REGISTER dependency:  %ecx
 |      8.    cmpq	%rax, %rsi
 |      9.    jle	.L5
 +----> 10.   movl	(%rdi,%rax,4), %ecx               ## REGISTER dependency:  %rax
 +----> 11.   cmpl	%edx, %ecx                        ## REGISTER dependency:  %ecx
 +----> 12.   jne	.L10                              ## REGISTER dependency:  %flags
 |      13.   movl	$1, %eax
 +----> 14.   retq                                        ## RESOURCE interference:  SKLPort0 [ probability: 0% ]
 |      15.   xorl	%eax, %eax
 +----> 16.   retq                                        ## RESOURCE interference:  SKLPort6 [ probability: 36% ]
 |
 |    < loop carried > 
 |
 +----> 5.    setl	%cl                               ## RESOURCE interference:  SKLPort6 [ probability: 27% ]


Instruction Info:
[1]: #uOps
[2]: Latency
[3]: RThroughput
[4]: MayLoad
[5]: MayStore
[6]: HasSideEffects (U)

[1]    [2]    [3]    [4]    [5]    [6]    Instructions:
 1      100   0.25                  U     endbr64
 1      1     0.25                        testq	%rsi, %rsi
 1      1     0.50                        jle	.L5
 1      0     0.17                        xorl	%eax, %eax
 1      1     0.50                        jmp	.L4
 1      1     0.50                        setl	%cl
 1      1     0.25                        movzbl	%cl, %ecx
 1      1     0.50                        leaq	1(%rcx,%rax,2), %rax
 1      1     0.25                        cmpq	%rax, %rsi
 1      1     0.50                        jle	.L5
 1      5     0.50    *                   movl	(%rdi,%rax,4), %ecx
 1      1     0.25                        cmpl	%edx, %ecx
 1      1     0.50                        jne	.L10
 1      1     0.25                        movl	$1, %eax
 3      7     1.00                  U     retq
 1      0     0.17                        xorl	%eax, %eax
 3      7     1.00                  U     retq


Resources:
[0]   - SKLDivider
[1]   - SKLFPDivider
[2]   - SKLPort0
[3]   - SKLPort1
[4]   - SKLPort2
[5]   - SKLPort3
[6]   - SKLPort4
[7]   - SKLPort5
[8]   - SKLPort6
[9]   - SKLPort7


Resource pressure per iteration:
[0]    [1]    [2]    [3]    [4]    [5]    [6]    [7]    [8]    [9]    
 -      -     4.36   3.55   1.50   1.50    -     3.73   4.36    -     

Resource pressure by instruction:
[0]    [1]    [2]    [3]    [4]    [5]    [6]    [7]    [8]    [9]    Instructions:
 -      -     0.54   0.09    -      -      -     0.36    -      -     endbr64
 -      -     0.45   0.45    -      -      -     0.09    -      -     testq	%rsi, %rsi
 -      -     0.82    -      -      -      -      -     0.18    -     jle	.L5
 -      -      -      -      -      -      -      -      -      -     xorl	%eax, %eax
 -      -     0.54    -      -      -      -      -     0.46    -     jmp	.L4
 -      -     0.45    -      -      -      -      -     0.55    -     setl	%cl
 -      -      -     0.27    -      -      -     0.64   0.09    -     movzbl	%cl, %ecx
 -      -      -     0.64    -      -      -     0.36    -      -     leaq	1(%rcx,%rax,2), %rax
 -      -     0.09   0.55    -      -      -     0.18   0.18    -     cmpq	%rax, %rsi
 -      -     0.55    -      -      -      -      -     0.45    -     jle	.L5
 -      -      -      -     0.50   0.50    -      -      -      -     movl	(%rdi,%rax,4), %ecx
 -      -     0.09   0.27    -      -      -     0.54   0.09    -     cmpl	%edx, %ecx
 -      -     0.73    -      -      -      -      -     0.27    -     jne	.L10
 -      -      -     0.18    -      -      -     0.73   0.09    -     movl	$1, %eax
 -      -      -     0.64   0.50   0.50    -     0.36   1.00    -     retq
 -      -      -      -      -      -      -      -      -      -     xorl	%eax, %eax
 -      -     0.09   0.45   0.50   0.50    -     0.45   1.00    -     retq


Timeline view:
                    0123456789          0123456789          01
Index     0123456789          0123456789          0123456789  


Average Wait times (based on the timeline view):
[0]: Executions
[1]: Average time spent waiting in a scheduler's queue
[2]: Average time spent waiting in a scheduler's queue while ready
[3]: Average time elapsed from WB until retire stage

      [0]    [1]    [2]    [3]
0.     10    1.3    1.3    0.0       endbr64
1.     10    1.9    1.9    98.4      testq	%rsi, %rsi
2.     10    3.3    0.4    97.0      jle	.L5
3.     10    0.0    0.0    100.4     xorl	%eax, %eax
4.     10    2.2    2.2    97.2      jmp	.L4
5.     10    3.3    3.3    96.1      setl	%cl
6.     10    4.2    0.0    95.1      movzbl	%cl, %ecx
7.     10    5.2    0.0    94.1      leaq	1(%rcx,%rax,2), %rax
8.     10    6.2    0.0    93.1      cmpq	%rax, %rsi
9.     10    6.3    0.0    92.1      jle	.L5
10.    10    5.3    0.0    89.1      movl	(%rdi,%rax,4), %ecx
11.    10    10.3   0.0    88.1      cmpl	%edx, %ecx
12.    10    11.2   0.0    87.1      jne	.L10
13.    10    1.6    1.6    96.7      movl	$1, %eax
14.    10    2.2    2.2    89.2      retq
15.    10    1.7    0.0    96.7      xorl	%eax, %eax
16.    10    2.2    2.2    88.2      retq
       10    4.0    0.9    88.2      <total>
