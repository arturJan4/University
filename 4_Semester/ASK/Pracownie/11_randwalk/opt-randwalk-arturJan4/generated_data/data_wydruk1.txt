
randwalk.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <randwalk0>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 57                	push   %r15
   6:	31 c0                	xor    %eax,%eax
   8:	41 89 f7             	mov    %esi,%r15d
   b:	31 c9                	xor    %ecx,%ecx
   d:	41 56                	push   %r14
   f:	49 89 fe             	mov    %rdi,%r14
  12:	41 55                	push   %r13
  14:	8d 7e ff             	lea    -0x1(%rsi),%edi
  17:	45 31 ed             	xor    %r13d,%r13d
  1a:	41 54                	push   %r12
  1c:	41 89 d4             	mov    %edx,%r12d
  1f:	55                   	push   %rbp
  20:	89 f5                	mov    %esi,%ebp
  22:	c1 ed 1f             	shr    $0x1f,%ebp
  25:	53                   	push   %rbx
  26:	01 f5                	add    %esi,%ebp
  28:	48 83 ec 18          	sub    $0x18,%rsp
  2c:	d1 fd                	sar    %ebp
  2e:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
  32:	89 eb                	mov    %ebp,%ebx
  34:	eb 1a                	jmp    50 <randwalk0+0x50>
  36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  3d:	00 00 00 
  --------------------początek pętli do -------------------
  40:	31 f6                	xor    %esi,%esi
  42:	85 ed                	test   %ebp,%ebp
  44:	40 0f 9f c6          	setg   %sil                 # set 1/4
  48:	29 f5                	sub    %esi,%ebp
  4a:	41 83 ec 01          	sub    $0x1,%r12d
  4e:	74 44                	je     94 <randwalk0+0x94>  # jump 1/9 (cond)
  50:	83 e9 02             	sub    $0x2,%ecx            # k -= 2
  53:	78 5b                	js     b0 <randwalk0+0xb0>  # jump 2/9 (cond)
  55:	41 89 e8             	mov    %ebp,%r8d
  58:	49 89 c1             	mov    %rax,%r9
  5b:	45 0f af c7          	imul   %r15d,%r8d
  5f:	49 d3 e9             	shr    %cl,%r9
  62:	41 01 d8             	add    %ebx,%r8d
  65:	4d 63 c0             	movslq %r8d,%r8
  68:	43 0f b6 34 06       	movzbl (%r14,%r8,1),%esi
  6d:	41 01 f5             	add    %esi,%r13d
  70:	41 83 e1 03          	and    $0x3,%r9d
  74:	74 ca                	je     40 <randwalk0+0x40>  # jump 3/9 (cond)
  76:	41 83 f9 01          	cmp    $0x1,%r9d
  7a:	74 44                	je     c0 <randwalk0+0xc0>  # jump 4/9 (cond)
  7c:	41 83 f9 02          	cmp    $0x2,%r9d
  80:	74 56                	je     d8 <randwalk0+0xd8>  # jump 5/9 (cond)
  82:	31 f6                	xor    %esi,%esi
  84:	39 5c 24 0c          	cmp    %ebx,0xc(%rsp)
  88:	40 0f 9f c6          	setg   %sil                 # set 2/4
  8c:	01 f3                	add    %esi,%ebx
  8e:	41 83 ec 01          	sub    $0x1,%r12d
  92:	75 bc                	jne    50 <randwalk0+0x50>  # jump 6/9 (cond)
  ---------------- fragment konczący z ret---------------------
  94:	48 83 c4 18          	add    $0x18,%rsp
  98:	44 89 e8             	mov    %r13d,%eax
  9b:	5b                   	pop    %rbx
  9c:	5d                   	pop    %rbp
  9d:	41 5c                	pop    %r12
  9f:	41 5d                	pop    %r13
  a1:	41 5e                	pop    %r14
  a3:	41 5f                	pop    %r15
  a5:	c3                   	retq   
  a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  ad:	00 00 00 
  ---------------------------------------------------------- -> dalej pętla
  b0:	31 c0                	xor    %eax,%eax                  # fragment z fast_random
  b2:	e8 00 00 00 00       	callq  b7 <randwalk0+0xb7>
  b7:	b9 3e 00 00 00       	mov    $0x3e,%ecx
  bc:	eb 97                	jmp    55 <randwalk0+0x55>  # jump 7/9 (uncon)
  be:	66 90                	xchg   %ax,%ax
  c0:	31 f6                	xor    %esi,%esi
  c2:	39 6c 24 0c          	cmp    %ebp,0xc(%rsp)
  c6:	40 0f 9f c6          	setg   %sil                 # set 3/4
  ca:	01 f5                	add    %esi,%ebp
  cc:	e9 79 ff ff ff       	jmpq   4a <randwalk0+0x4a>  # jump 8/9 (uncon)
  d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  d8:	31 f6                	xor    %esi,%esi
  da:	85 db                	test   %ebx,%ebx
  dc:	40 0f 9f c6          	setg   %sil                 # set 4/4
  e0:	29 f3                	sub    %esi,%ebx
  e2:	e9 63 ff ff ff       	jmpq   4a <randwalk0+0x4a>  # jump 9/9 (uncon)
  e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  ee:	00 00 

00000000000000f0 <randwalk1>:
  f0:	f3 0f 1e fa          	endbr64 
  f4:	41 57                	push   %r15
  f6:	31 c0                	xor    %eax,%eax
  f8:	41 89 f7             	mov    %esi,%r15d
  fb:	31 c9                	xor    %ecx,%ecx
  fd:	41 56                	push   %r14
  ff:	49 89 fe             	mov    %rdi,%r14
 102:	41 55                	push   %r13
 104:	45 31 ed             	xor    %r13d,%r13d
 107:	41 54                	push   %r12
 109:	41 89 d4             	mov    %edx,%r12d
 10c:	55                   	push   %rbp
 10d:	8d 56 ff             	lea    -0x1(%rsi),%edx
 110:	53                   	push   %rbx
 111:	89 f3                	mov    %esi,%ebx
 113:	c1 eb 1f             	shr    $0x1f,%ebx
 116:	48 83 ec 18          	sub    $0x18,%rsp
 11a:	01 f3                	add    %esi,%ebx
 11c:	d1 fb                	sar    %ebx
 11e:	89 dd                	mov    %ebx,%ebp
 120:	eb 7a                	jmp    19c <randwalk1+0xac>  # skok do 0x19C
 122:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 -------------------------------------------
 128:	41 89 d9             	mov    %ebx,%r9d             # początek pętli do
 12b:	49 89 c0             	mov    %rax,%r8
 12e:	45 0f af cf          	imul   %r15d,%r9d
 132:	49 d3 e8             	shr    %cl,%r8
 135:	41 01 e9             	add    %ebp,%r9d
 138:	4d 63 c9             	movslq %r9d,%r9
 13b:	43 0f b6 34 0e       	movzbl (%r14,%r9,1),%esi
 140:	41 01 f5             	add    %esi,%r13d
 143:	41 83 e0 03          	and    $0x3,%r8d
 147:	40 0f 94 c7          	sete   %dil                  # set 1/8
 14b:	31 f6                	xor    %esi,%esi
 14d:	85 db                	test   %ebx,%ebx
 14f:	40 0f 9f c6          	setg   %sil                  # set 2/8
 153:	21 fe                	and    %edi,%esi
 155:	29 f3                	sub    %esi,%ebx
 157:	41 83 f8 01          	cmp    $0x1,%r8d
 15b:	40 0f 94 c7          	sete   %dil                  # set 3/8
 15f:	31 f6                	xor    %esi,%esi
 161:	39 d3                	cmp    %edx,%ebx
 163:	40 0f 9c c6          	setl   %sil                  # set 4/8
 167:	21 fe                	and    %edi,%esi
 169:	01 f3                	add    %esi,%ebx
 16b:	41 83 f8 02          	cmp    $0x2,%r8d
 16f:	40 0f 94 c7          	sete   %dil                  # set 5/8
 173:	31 f6                	xor    %esi,%esi
 175:	85 ed                	test   %ebp,%ebp
 177:	40 0f 9f c6          	setg   %sil                  # set 6/8
 17b:	21 fe                	and    %edi,%esi
 17d:	29 f5                	sub    %esi,%ebp
 17f:	41 83 f8 03          	cmp    $0x3,%r8d
 183:	40 0f 94 c6          	sete   %sil                  # set 7/8
 187:	45 31 c0             	xor    %r8d,%r8d
 18a:	39 d5                	cmp    %edx,%ebp
 18c:	41 0f 9c c0          	setl   %r8b                  # set 8/8
 190:	41 21 f0             	and    %esi,%r8d
 193:	44 01 c5             	add    %r8d,%ebp
 196:	41 83 ec 01          	sub    $0x1,%r12d
 19a:	74 24                	je     1c0 <randwalk1+0xd0>  # jump 1/3 (cond) # skok do 1c0 jeśli --len == 0
 19c:	83 e9 02             	sub    $0x2,%ecx             # początek pętli z fast_random
 19f:	79 87                	jns    128 <randwalk1+0x38>  # jump 2/3 (cond)
 1a1:	31 c0                	xor    %eax,%eax
 1a3:	89 54 24 0c          	mov    %edx,0xc(%rsp)
 1a7:	e8 00 00 00 00       	callq  1ac <randwalk1+0xbc>
 1ac:	8b 54 24 0c          	mov    0xc(%rsp),%edx
 1b0:	b9 3e 00 00 00       	mov    $0x3e,%ecx
 1b5:	e9 6e ff ff ff       	jmpq   128 <randwalk1+0x38>   # jump 3/3 (uncond)
                          # koniec pętli z fast_random -> skok do 0x128 (czyli początku do) lub koniec
 -------------------------------------------------------------
 1ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)       
 1c0:	48 83 c4 18          	add    $0x18,%rsp             # czyszczenie stosu po funkcji -> koniec
 1c4:	44 89 e8             	mov    %r13d,%eax
 1c7:	5b                   	pop    %rbx
 1c8:	5d                   	pop    %rbp
 1c9:	41 5c                	pop    %r12
 1cb:	41 5d                	pop    %r13
 1cd:	41 5e                	pop    %r14
 1cf:	41 5f                	pop    %r15
 1d1:	c3                   	retq   
